https://www.cs.unca.edu/~bruce/Fall11/255/

https://www.cs.unca.edu/~bruce/Fall11/255/PIC24Architecture.pdf

https://www.cs.unca.edu/~bruce/Fall11/255/PIC24_instruction_set_summary.pdf


Start of Application Image

00000000  10 35 04 00 00 00 00 00  80 24 04 00 01 00 00 00  |.5.......$......|
00000010  80 24 04 00 01 00 00 00  80 24 04 00 01 00 00 00  |.$.......$......|
*
00000040  80 24 04 00 01 00 00 00  b0 16 04 00 01 00 00 00  |.$..............|
00000050  80 24 04 00 01 00 00 00  80 24 04 00 01 00 00 00  |.$.......$......|
00000060  80 24 04 00 01 00 00 00  a8 06 04 00 01 00 00 00  |.$..............|
00000070  80 24 04 00 01 00 00 00  80 24 04 00 01 00 00 00  |.$.......$......|
*
000000b0  80 24 04 00 01 00 00 00  84 06 04 00 01 00 00 00  |.$..............|
000000c0  80 24 04 00 01 00 00 00  80 24 04 00 01 00 00 00  |.$.......$......|
*
000000e0  80 24 04 00 01 00 00 00  56 01 04 00 01 00 00 00  |.$......V.......|
000000f0  80 24 04 00 01 00 00 00  80 24 04 00 01 00 00 00  |.$.......$......|
*
00000220  0f a0 20 00 8e fe 23 00  0e 01 88 00 00 00 00 00  |.. ...#.........|

End of Image

0001e000  00 00 eb 00 fc 18 02 00  01 00 00 00 c0 00 20 00  |.............. .|
0001e010  a4 8a 02 00 00 00 00 00  a0 00 20 00 bc be 02 00  |.......... .....|
0001e020  00 00 00 00 00 80 fa 00  00 00 06 00 00 00 fa 00  |................|
0001e030  9c 6b 02 00 00 00 00 00  00 80 fa 00 00 00 06 00  |.k..............|
0001e040  10 80 ba 00 00 00 06 00  10 00 ba 00 00 00 06 00  |................|
0001e050  80 1f 78 00 05 00 fc 00  50 05 20 00 30 3b 88 00  |..x.....P. .0;..|
0001e060  a0 0a 20 00 30 3b 88 00  61 e7 a8 00 00 00 00 00  |.. .0;..a.......|
0001e070  00 00 00 00 61 e7 af 00  fe ff 37 00 4f 00 78 00  |....a.....7.O.x.|
0001e080  00 00 06 00 80 88 bb 00  00 00 06 00 80 c8 bb 00  |................|
0001e090  00 00 06 00 80 08 bb 00  00 00 06 00 80 48 bb 00  |.............H..|
0001e0a0  00 00 06 00 00 00 fa 00  91 6d 20 00 91 40 78 00  |.........m ..@x.|
0001e0b0  00 cc b3 00 00 c0 60 00  50 40 b3 00 d9 e6 b7 00  |......`.P@......|
0001e0c0  61 6a 20 00 91 40 78 00  00 cc b3 00 00 c0 60 00  |aj ..@x.......`.|
0001e0d0  40 41 b3 00 a6 e6 b7 00  20 02 20 00 c0 11 88 00  |@A...... . .....|
0001e0e0  30 62 a8 00 31 e2 a8 00  33 42 a8 00 97 e0 a9 00  |0b..1...3B......|
0001e0f0  20 00 20 00 e0 30 8a 00  00 80 fa 00 00 00 06 00  | . ..0..........|
0001e100  00 40 da 00 00 00 fe 00  ff ff ff 00 ff ff ff 00  |.@..............|
0001e110  ff ff ff 00 ff ff ff 00  ff ff ff 00 ff ff ff 00  |................|

1. Instruction addresses are 16-bit word addresses:
2. Instructions take two 16-bit words

=> PC address 2 is at byte address 4


10 35 04 00 00 00 00 00

00043510
00000000

= GOTO 0x003510 would jump to byte address 0x006A20

80 24 04 00 01 00 00 00

00042480
00000001

= GOTO 0x012480 would jump to byte addres 0x024900


So where is the Application image intended to be located?

Lets assume there is a offset of 0x6800 bytes (i.e. the image is
loaded to byte address 0x6800 which is word address 0x3400).

Does this work?

----------------------

0x003510 is at byte offset 0x3510 * 2 - 0x6800 = 0x000220 which is
very close to the start of the image, and appears to be the first
instruction.

0f a0 20 00 8e fe 23 00

(immediately preceeded by large block of goto instuctions)
00003510 0020a00f MOV #20a0, w15  <<<<<<< Reset vector points gere
00003512 0023fe8e MOV #2f8e, w14

----------------------

0x012480 is at byte offset 0x12480 * 2 - 0x6800 = 0x01e100 which is
very close to the end of the Image.

00 40 da 00 00 00 fe 00

001247E 00060000 RETURN
0012480 00da4000 ???                    <<<<<<< GOTOs point here
0012482 00fe0000 RESET (Assert SYSRST)
0012484 00ffffff NOP
0012486 00ffffff NOP

----------------------
